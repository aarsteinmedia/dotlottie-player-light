import type { AnimationConfiguration, AnimationData, AnimationDirection } from '../types';
import AnimationItem from '../animation/AnimationItem';
import { RendererType } from '../enums';
export declare function destroy(animation?: string): void;
export declare function freeze(): void;
export declare function getRegisteredAnimations(): AnimationItem[];
export declare function goToAndStop(value: number, isFrame?: boolean, animation?: string): void;
export declare function loadAnimation(params: AnimationConfiguration): AnimationItem;
export declare function mute(animation?: string): void;
export declare function pause(animation?: string): void;
export declare function play(animation?: string): void;
export declare function registerAnimation(element: HTMLElement | null, animationData?: AnimationData): AnimationItem | null;
export declare function resize(): void;
export declare function searchAnimations(animationData?: AnimationData, standalone?: boolean, rendererFromProps?: RendererType): void;
export declare function setDirection(val: AnimationDirection, animation?: string): void;
export declare function setSpeed(val: number, animation?: string): void;
export declare function setVolume(val: number, animation?: string): void;
export declare function stop(animation?: string): void;
export declare function togglePause(animation?: string): void;
export declare function unfreeze(): void;
export declare function unmute(animation?: string): void;
