import type { ImageData, LottieAsset } from '@/types';
export default class ImagePreloader {
    assetsPath: string;
    images: ImageData[];
    imagesLoadedCb: null | ((images: ImageData[] | null) => void);
    loadedAssets: number;
    loadedFootagesCount: number;
    path: string;
    totalFootages: number;
    totalImages: number;
    private _createImageData?;
    private _elementHelper?;
    private _footageLoaded;
    private _imageLoaded;
    private proxyImage;
    constructor();
    createFootageData(data: LottieAsset): ImageData;
    createImageData(assetData: LottieAsset): ImageData;
    destroy(): void;
    footageLoaded(): void;
    getAsset(assetData: LottieAsset): HTMLMediaElement | HTMLCanvasElement | SVGElement | null;
    imageLoaded(): void;
    loadAssets(assets: LottieAsset[], cb: ImagePreloader['imagesLoadedCb']): void;
    loadedFootages(): boolean;
    loadedImages(): boolean;
    setAssetsPath(path?: string): void;
    setCacheType(type: string, elementHelper: SVGElement): void;
    setPath(path?: string): void;
    private _createProxyImage;
    private createImgData;
    private getAssetsPath;
    private testImageLoaded;
}
